{
  "name": "json-edm-parser",
  "version": "0.1.2",
  "description": "This is a JSON streaming parser for node.js. It will handle the Entity Data Model (EDM) types to be compatitable with odata.",
  "main": "parser.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yaxia/json-edm-parser.git"
  },
  "keywords": [
    "json",
    "stream",
    "odata",
    "edm",
    "parser"
  ],
  "author": {
    "name": "Yang Xia"
  },
  "license": "MIT",
  "dependencies": {
    "jsonparse": "~1.2.0"
  },
  "devDependencies": {
    "tape": "~4.4.0",
    "tap": "~5.0.0"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "bugs": {
    "url": "https://github.com/yaxia/json-edm-parser/issues"
  },
  "homepage": "https://github.com/yaxia/json-edm-parser#readme",
  "readme": "# json-edm-parser\r\n[![Build Status](https://travis-ci.org/yaxia/json-edm-parser.svg?branch=master)](https://travis-ci.org/yaxia/json-edm-parser)\r\n\r\nThis is a JSON streaming parser for node.js. It will handle the Entity Data Model (EDM) types to be compatitable with odata.\r\n\r\nWhen you use JSON to represent an odata entity, a number without a decimal point in the JSON will have Edm.Int32 by default and \r\nwill have Edm.Double if there are non-zero digits after the decimal point. However, if the value is set to *.0, \r\nMost JSON parsers will take it as an integer. To keep the type information, this parser will add an additional member \"<property>@odata.type\": \"Edm.Double\" \r\nto the object.\r\n\r\n## Install\r\n\r\n```shell\r\nnpm install json-edm-parser\r\n```\r\n\r\n## Usage\r\n\r\n```Javascript\r\nvar Parser = require('json-edm-parser');\r\n\r\nvar p = new Parser();\r\np.write('{ \"doubleIntNumber\": 12.00,');\r\np.write('\"doubleNormalNumber\": 1.2,');\r\np.write('\"doubleLargeNumber\": 12345678901234546789.0000000000000000000000000001,');\r\np.write('\"int64LargeNumber\": 12345678901234567890123456789}');\r\n\r\n/*\r\n* You will get \r\n*  { 'doubleIntNumber@odata.type': 'Edm.Double',\r\n*    doubleIntNumber: '12.00',\r\n*    doubleNormalNumber: 1.2,\r\n*    'doubleLargeNumber@odata.type': 'Edm.Double',\r\n*    doubleLargeNumber: '12345678901234546789.0000000000000000000000000001',\r\n*    int64LargeNumber: '12345678901234567890123456789' }\r\n*/\r\np.onValue = function (value) {\r\n  // Deal with the value\r\n};\r\n```",
  "readmeFilename": "README.md",
  "_id": "json-edm-parser@0.1.2",
  "_shasum": "1e60b0fef1bc0af67bc0d146dfdde5486cd615b4",
  "_from": "json-edm-parser@0.1.2",
  "_resolved": "https://registry.npmjs.org/json-edm-parser/-/json-edm-parser-0.1.2.tgz"
}
